{"ast":null,"code":"var _jsxFileName = \"D:\\\\TaskManagementFrontEnd\\\\task\\\\src\\\\components\\\\AddTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = () => {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [taskId, setTaskId] = useState('');\n  const [issuedDate, setIssuedDate] = useState('');\n  const [status, setStatus] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const navigate = useNavigate(); // Initialize useNavigate hook\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8080/api/tasks', {\n        id: taskId,\n        name: taskName,\n        description: taskDescription,\n        issuedDate: issuedDate,\n        status: status\n      });\n      setIsSubmitted(true);\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n  const handleBack = () => {\n    setIsSubmitted(false);\n    navigate('/dashboard'); // Navigate to the dashboard page\n  };\n  if (isSubmitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task Added Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTaskForm, \"qfPatCB7wb2o/F3/pPOwQ4h835Y=\", false, function () {\n  return [useNavigate];\n});\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","AddTaskForm","_s","taskName","setTaskName","taskDescription","setTaskDescription","taskId","setTaskId","issuedDate","setIssuedDate","status","setStatus","isSubmitted","setIsSubmitted","navigate","handleSubmit","e","preventDefault","post","id","name","description","error","console","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","_c","$RefreshReg$"],"sources":["D:/TaskManagementFrontEnd/task/src/components/AddTask.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\r\nimport axios from 'axios';\r\n\r\nconst AddTaskForm = () => {\r\n  const [taskName, setTaskName] = useState('');\r\n  const [taskDescription, setTaskDescription] = useState('');\r\n  const [taskId, setTaskId] = useState('');\r\n  const [issuedDate, setIssuedDate] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const navigate = useNavigate(); // Initialize useNavigate hook\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:8080/api/tasks', {\r\n        id: taskId,\r\n        name: taskName,\r\n        description: taskDescription,\r\n        issuedDate: issuedDate,\r\n        status: status\r\n      });\r\n      setIsSubmitted(true);\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setIsSubmitted(false);\r\n    navigate('/dashboard'); // Navigate to the dashboard page\r\n  };\r\n\r\n  if (isSubmitted) {\r\n    return (\r\n      <div className=\"add-task-form\">\r\n        <h2>Task Added Successfully</h2>\r\n        <button onClick={handleBack}>Back</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-task-form\">\r\n      <h2>Add Task</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Input fields for task details */}\r\n        {/* ... */}\r\n        <button type=\"submit\">Add Task</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}