{"ast":null,"code":"var _jsxFileName = \"D:\\\\TaskManagementFrontEnd\\\\task\\\\src\\\\components\\\\UpdateTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateTaskPage = () => {\n  _s();\n  const [id, setId] = useState('');\n  const [taskName, setTaskName] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [status, setStatus] = useState('');\n  const navigate = useNavigate();\n  const handleUpdate = async () => {\n    const credentials = localStorage.getItem('token');\n    try {\n      const response = await axios.put(`http://localhost:8080/api/tasks/${id}`, {\n        name: taskName,\n        description: taskDescription\n      }, {\n        headers: {\n          'Authorization': `Basic ${credentials}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        alert('Task updated successfully');\n      } else {\n        alert('Failed to update task.');\n      }\n    } catch (error) {\n      alert('Failed to update task.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-update\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-back\",\n        onClick: () => navigate('/all-tasks'),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateTaskPage, \"bZduGcGHAZaWnvLGoMsuX8uv4pc=\", false, function () {\n  return [useNavigate];\n});\n_c = UpdateTaskPage;\nexport default UpdateTaskPage;\nvar _c;\n$RefreshReg$(_c, \"UpdateTaskPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","UpdateTaskPage","_s","id","setId","taskName","setTaskName","taskDescription","setTaskDescription","status","setStatus","navigate","handleUpdate","credentials","localStorage","getItem","response","put","name","description","headers","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["D:/TaskManagementFrontEnd/task/src/components/UpdateTask.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UpdateTaskPage = () => {\r\n  const [id, setId] = useState('');\r\n  const [taskName, setTaskName] = useState('');\r\n  const [taskDescription, setTaskDescription] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const navigate = useNavigate();\r\n  \r\n  const handleUpdate = async () => {\r\n    const credentials = localStorage.getItem('token');\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:8080/api/tasks/${id}`, {\r\n        name: taskName,\r\n        description: taskDescription,\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Basic ${credentials}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        alert('Task updated successfully');\r\n      } else {\r\n        alert('Failed to update task.');\r\n      }\r\n    } catch (error) {\r\n      alert('Failed to update task.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"update-task-container\">\r\n      <h2>Update Task</h2>\r\n      <form>\r\n        {/* Input fields */}\r\n        <button type=\"button\" className=\"btn btn-update\" onClick={handleUpdate}>Update</button>\r\n        {/* Back button */}\r\n        <button type=\"button\" className=\"btn btn-back\" onClick={() => navigate('/all-tasks')}>\r\n          Back\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateTaskPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAEjD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAE,mCAAkCd,EAAG,EAAC,EAAE;QACxEe,IAAI,EAAEb,QAAQ;QACdc,WAAW,EAAEZ;MACf,CAAC,EAAE;QACDa,OAAO,EAAE;UACP,eAAe,EAAG,SAAQP,WAAY,EAAC;UACvC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACP,MAAM,KAAK,GAAG,EAAE;QAC3BY,KAAK,CAAC,2BAA2B,CAAC;MACpC,CAAC,MAAM;QACLA,KAAK,CAAC,wBAAwB,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdD,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EAED,oBACErB,OAAA;IAAKuB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCxB,OAAA;MAAAwB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB5B,OAAA;MAAAwB,QAAA,gBAEExB,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAACN,SAAS,EAAC,gBAAgB;QAACO,OAAO,EAAElB,YAAa;QAAAY,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEvF5B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAACN,SAAS,EAAC,cAAc;QAACO,OAAO,EAAEA,CAAA,KAAMnB,QAAQ,CAAC,YAAY,CAAE;QAAAa,QAAA,EAAC;MAEtF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5CID,cAAc;EAAA,QAKDH,WAAW;AAAA;AAAAiC,EAAA,GALxB9B,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}